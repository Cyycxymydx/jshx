/*********************************************************************
*动态数组的建立与释放
*********************************************************************/
#include<stdio.h>
#include<stdlib.h>
double**M_build(int num1, int num2);
void M_free(double**m, int num1);
double*M1_build(int num);
/*********************************************************************
*动态矩阵的建立
*********************************************************************/
double**M_build(int num1, int num2) {
	double **array = (double **)calloc(num1, sizeof(double*));
	for (int i = 0; i < num1; i++) {
		array[i] = (double*)calloc(num2, sizeof(double));
	}
	return array;
}
/*********************************************************************
*动态矩阵的释放
*********************************************************************/
void M_free(double**array, int num1) {
	for (int i = 0; i < num1; i++) {
		free(array[i]);
	}
	free(array);
}
/*********************************************************************
*一维动态数组的建立
*********************************************************************/
double*M1_build(int num) {
	double *array = (double*)calloc(num, sizeof(double));
	return array;
}
/*********************************************************************
*
*********************************************************************/